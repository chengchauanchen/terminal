apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            keyAlias '4gpttpdt'
            keyPassword '4gpttvsx'
            storeFile file('E:/vsxin/app_recoder_xinzhou.keyStore')
            storePassword '4gpttvsx'
        }
        debug {
            keyAlias '4gpttpdt'
            keyPassword '4gpttvsx'
            storeFile file('E:/vsxin/app_recoder_xinzhou.keyStore')
            storePassword '4gpttvsx'
        }
    }
    compileSdkVersion 26
    buildToolsVersion '28.0.3'
    flavorDimensions "default"
    defaultConfig {
        applicationId "cn.vsx.vc"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 24
        versionName "1.0.24"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true//去掉不用资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            shrinkResources false//去掉不用资源
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        companyTest{}
        companyDevelop{}
        baiDuYunYanShi{}
        anJianTest{}
        policeTest{}
        policeStore{}
        policeStoreOut{}
        xiangYang{}
        xiangYangOut{}
        xiangYangPoliceStore{}
        chuTianYun{}
        jiaXing{}
        xinZhou{}
        yingJiGuanLiTing{}
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [apk_type: name]
    }
    applicationVariants.all { variant ->
            variant.outputs.all() { output ->
                def flavor = variant.productFlavors[0]
                def fileName = "recorder_${variant.flavorName}_${signTime()}.${variant.versionName}_${variant.versionCode}.apk"
                /*//默认打包方式，打包到app的子目录下
                outputFileName = fileName*/
                //修改打包路径，工程apkpackage文件夹下
                //也可以在打包时手动选择对应目录
                def des = output.packageApplication.outputDirectory.toPath().relativize(rootDir.toPath()).toFile()
                outputFileName = new File("$des/apkpackage", fileName)
            }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/plexus/components.xml'
        exclude 'licenses/javolution.license.TXT'
        exclude 'licenses/thoughtworks.TXT'
        exclude 'org/apache/maven/project/pom-4.0.0.xml'
        exclude 'licenses/extreme.indiana.edu.license.TXT'
        exclude 'org/cyberneko/html/res/HTMLlat1.properties'
        exclude 'org/cyberneko/html/res/ErrorMessages_ja.properties'
        exclude 'org/cyberneko/html/res/ErrorMessages_ja.txt'
        exclude 'org/cyberneko/html/res/ErrorMessages.properties'
        exclude 'org/codehaus/plexus/plexus-bootstrap.xml'
        exclude 'org/cyberneko/html/res/HTMLspecial.properties'
        exclude 'org/cyberneko/html/res/XMLbuiltin.properties'
        exclude 'org/cyberneko/html/res/HTMLsymbol.properties'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

def signTime() {
    return new Date().format("MM-dd")
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'android.arch.lifecycle:reactivestreams:1.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    implementation project(':imageandfileselector')
    implementation project(':SpecificSDK4GPTT')
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
//    implementation 'com.jakewharton:butterknife:10.1.0'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    /*二维码*/
    compile 'cn.yipianfengye.android:zxing-library:2.2'
    implementation(name: 'libuvccamera-release', ext: 'aar') {
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
    }

    //语音合成
    implementation project(':mscv5')
}
